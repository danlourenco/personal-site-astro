---
import { Image } from 'astro:assets';

interface TimelineEntry {
  company: string;
  position: string;
  startDate: string;
  endDate: string;
  logo: ImageMetadata;
  description: string;
}

interface Props {
  entries: TimelineEntry[];
}

const { entries } = Astro.props;
---

<div class="space-y-8">
  <h2 class="text-2xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100">
    Work Experience
  </h2>
  
  <div class="space-y-8">
    {entries.map((entry, index) => (
      <div class="relative">
        {/* Timeline line */}
        {index < entries.length - 1 && (
          <div class="absolute left-8 top-16 h-full w-0.5 bg-zinc-200 dark:bg-zinc-700" aria-hidden="true" />
        )}
        
        <div class="relative flex gap-4">
          {/* Company logo */}
          <div class="flex h-16 w-16 flex-none items-center justify-center rounded-full shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-slate-700 dark:ring-0 overflow-hidden">
            <Image 
              src={entry.logo} 
              alt={`${entry.company} logo`}
              width={64}
              height={64}
              class="h-full w-full object-cover"
            />
          </div>
          
          {/* Content */}
          <div class="flex-1 min-w-0">
            {/* Date range */}
            <p class="text-sm text-zinc-500 dark:text-zinc-400">
              {entry.startDate} - {entry.endDate}
            </p>
            
            {/* Position and Company */}
            <h3 class="text-lg font-semibold text-zinc-800 dark:text-zinc-100">
              {entry.position}
            </h3>
            <p class="text-base font-medium text-zinc-600 dark:text-zinc-300">
              {entry.company}
            </p>
            
            {/* Description */}
            <div class="mt-2 text-sm text-zinc-600 dark:text-zinc-400">
              {(() => {
                const parts = entry.description.split('Highlights include:');
                const mainDescription = parts[0].trim();
                const highlights = parts[1]?.trim();
                
                return (
                  <>
                    <p class="whitespace-pre-line">{mainDescription}</p>
                    {highlights && (
                      <div class="mt-4">
                        <h4 class="text-sm font-semibold text-zinc-700 dark:text-zinc-300 mb-3">Key Projects</h4>
                        <div class="space-y-6">
                          {(() => {
                            // Define structured project data for cleaner presentation
                            const projectData = {
                              'Software Architect': {
                                'Major American Bank': {
                                  role: 'Technical Lead & Engineering Manager',
                                  impact: 'Streamlined financial advisor workflows, reducing approval time and improving client service efficiency',
                                  technologies: 'AWS Lambda, DynamoDB, Agile/Scrum methodologies'
                                },
                                'National Restaurant Chain': {
                                  role: 'Lead Developer & Performance Architect', 
                                  impact: 'Delivered 50% page load improvement across hundreds of locations, enhancing customer experience and operational efficiency',
                                  technologies: 'Nuxt 3, MapLibre, Radar.com, Image optimization'
                                }
                              },
                              'Senior Software Engineer': {
                                'Fortune 500 Financial Services Firm': {
                                  role: 'Frontend Team Lead & Mentor',
                                  impact: 'Improved development team productivity and code quality through mentorship and standardized practices',
                                  technologies: 'React, Snowplow, CLI tools, Testing frameworks'
                                },
                                'Federal Agency': {
                                  role: 'Accessibility-focused Frontend Developer',
                                  impact: 'Enabled faster benefits processing for millions of citizens through accessible, compliant UI components', 
                                  technologies: 'Micro-frontends, Federal accessibility standards, Case verification systems'
                                }
                              },
                              'Consultant': {
                                'Global Athletic Apparel Company': {
                                  role: 'Founding Frontend Engineer & Platform Architect',
                                  impact: 'Launched successful e-commerce platform generating $300K+ revenue in initial campaigns',
                                  technologies: 'JavaScript, E-commerce integration, Campaign management systems'
                                }
                              }
                            };

                            const currentPosition = entry.position;
                            const projects = projectData[currentPosition] || {};
                            
                            return Object.entries(projects).map(([client, data], i) => (
                              <div key={i} class="pl-4">
                                <h5 class="font-medium text-zinc-800 dark:text-zinc-200 mb-2">{client}</h5>
                                <div class="mb-2 text-xs space-y-1">
                                  <p><span class="font-medium text-zinc-700 dark:text-zinc-300">Role:</span> {data.role}</p>
                                  <p><span class="font-medium text-zinc-700 dark:text-zinc-300">Impact:</span> {data.impact}</p>
                                  <p><span class="font-medium text-zinc-700 dark:text-zinc-300">Technologies:</span> {data.technologies}</p>
                                </div>
                              </div>
                            ));
                          })()}
                        </div>
                      </div>
                    )}
                  </>
                );
              })()}
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>